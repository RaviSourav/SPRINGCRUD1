spring.mvc.view.prefix=/pages/
spring.mvc.view.suffix=.jsp
#
##jdbc:h2:~/test
#spring.datasource.url=jdbc:h2:mem:ravi
#spring.h2.console.enabled=true
#spring.datasource.username=test
#spring.datasource.password=test
##since my newer spring framework was throwing out an exception "table ALIEN not found" and this new line in app properties managed to create database on initialization with Entity annotation.
#spring.jpa.defer-datasource-initialization=true
##spring.datasource.platform=h2
#
##spring.datasource.url=jdbc:h2:mem:testdb
##spring.datasource.driver-class-name=org.h2.Driver
##spring.datasource.username=test
##spring.datasource.password=test
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
##spring.h2.console.enabled=true

#Above properties defined only for h2 (in-memory db). now we will use MySql
##############################################################################

spring.datasource.url=jdbc:mysql://localhost:3306/Spring
spring.datasource.username=root
spring.datasource.password=root@root
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
#this is deprecated above one is latest one
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#If we will use update it will take value from SQL file and conflict as id already present -> so creating record every time we are running

#We don't have to use data.sql file separately as it will update the current dataset.
#spring.jpa.hibernate.ddl-auto = update


spring.jpa.hibernate.ddl-auto = create
##since my newer spring framework was throwing out an exception "table ALIEN not found"
#and this new line in app properties managed to create database on initialization with Entity annotation.
spring.jpa.defer-datasource-initialization=true


#If you're using Spring Boot 2, database initialization only works for embedded databases (H2, HSQLDB, ...).
#If you want to use it for other databases as well, you need to change the initialization mode property:
# Spring Boot >=v2.5.0
spring.sql.init.mode=always
# Spring Boot <v2.5.0
#spring.datasource.initialization-mode=always


#It looks like your MySql session has the safe-updates option set.
#This means that you can't update or delete records without specifying a key (ex. primary key) in the where clause.
#SET SQL_SAFE_UPDATES = 0;




